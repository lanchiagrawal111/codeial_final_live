{"version":3,"sources":["helpers/urls.js","actions/actionTypes.js","helpers/utils.js","actions/posts.js","components/PostsList.js","actions/auth.js","actions/search.js","components/Navbar.js","components/Chat.js","components/FriendsList.js","components/Home.js","components/Page404.js","components/Login.js","components/Signup.js","components/Settings.js","actions/profile.js","actions/friends.js","components/UserProfile.js","components/FriendsListItem.js","components/CreatePost.js","components/Post.js","components/Comment.js","components/App.js","reducers/auth.js","reducers/profile.js","reducers/friends.js","reducers/search.js","reducers/index.js","reducers/posts.js","index.js","store/index.js"],"names":["API_ROOT","APIUrls","page","limit","userId","id","likeType","searchText","UPDATE_POSTS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILED","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","AUTHENTICATE_USER","LOG_OUT","CLEAR_AUTH_STATE","EDIT_USER_SUCCESSFUL","EDIT_USER_FAILED","USER_PROFILE_SUCCESS","USER_PROFILE_FAILURE","FETCH_USER_PROFILE","FETCH_FRIENDS_SUCCESS","ADD_FRIEND","REMOVE_FRIEND","ADD_POST","ADD_COMMENT","UPDATE_POST_LIKE","FETCH_SEARCH_RESULTS_SUCCESS","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthTokenFromLocalStorage","localStorage","getItem","fetchPosts","dispatch","url","fetch","then","response","json","data","posts","console","log","type","createPost","content","method","headers","Authorization","body","post","success","createComment","postId","post_id","comment","addComment","addLike","addLikeToStore","PostsList","this","props","className","map","_id","Component","login","email","password","setItem","token","user","errorMessage","message","error","signup","confirmPassword","name","confirm_password","logoutUser","clearAuthState","editUser","repsonse","searchUsers","searchResultsSuccess","users","Navbar","logout","removeItem","handleSearch","e","target","value","auth","results","to","src","alt","placeholder","onChange","length","isLoggedin","onClick","connect","state","search","Chat","setupConnections","socketConnection","socket","self","userEmail","on","emit","user_email","chatroom","messages","messageObject","setState","typedMessage","handleSubmit","io","transport","FriendsList","friends","friend","to_user","Home","Page404","Login","handleEmailChange","handlePasswordChange","handleFormSubmit","preventDefault","inProgress","from","location","pathname","required","disabled","Signup","handleInputChange","field","onFormSubmit","Settings","handleChange","fieldName","val","handleSave","editMode","fetchUserProfile","fetchUserFriends","UserProfile","checkIfUserIsAFriend","match","indexOf","handleAddFriendClick","a","options","successMessage","friendship","handleRemoveFriendClick","extra","prevProps","prevParams","currentParams","profile","isUserAFriend","FriendsListItem","CreatePost","handleOnClick","Post","handleAddComment","key","handleOnCommentChange","handlePostLike","isPostLikedByUser","likes","includes","comments","onKeyPress","Comment","PrivateRoute","privateRouteProps","path","component","render","App","jwt_decode","authenticateUser","exact","React","initialAuthState","initalProfileState","defaultProfileState","initialSearchState","combineReducers","action","newPosts","updatedPosts","concat","newArr","filter","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eab00eae.chunk.js","sourcesContent":["const API_ROOT = 'https://codeial.codingninjas.com:8000/api/v2/';\nexport const APIUrls = {\n  login: () => `${API_ROOT}/users/login`,\n  signup: () => `${API_ROOT}/users/signup`,\n  fetchPosts: (page, limit) => `${API_ROOT}/posts?page=${page}&limit=${limit}`,\n  editProfile: () => `${API_ROOT}/users/edit`,\n  userProfile: (userId) => `${API_ROOT}/users/${userId}`,\n  userFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\n  addFriend: (userId) =>\n    `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\n  removeFriend: (userId) =>\n    `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\n  createPost: () => `${API_ROOT}/posts/create`,\n  createComment: () => `${API_ROOT}/comments/`,\n  toggleLike: (id, likeType) =>\n    `${API_ROOT}/likes/toggle?likeable_id=${id}&likeable_type=${likeType}`,\n  userSearch: (searchText) => `${API_ROOT}/users/search?text=${searchText}`,\n};\n","export const UPDATE_POSTS = 'UPDATE_POSTS';\n\n//auth\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\n\nexport const SIGNUP_START = 'SIGNUP_START ';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED';\n\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOG_OUT = 'LOG_OUT';\nexport const CLEAR_AUTH_STATE = 'CLEAR_AUTH_STATE';\n\nexport const EDIT_USER_SUCCESSFUL = 'EDIT_USER_SUCCESSFUL';\nexport const EDIT_USER_FAILED = 'EDIT_USER_FAILED';\n\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\nexport const USER_PROFILE_FAILURE = 'USER_PROFILE_FAILURE';\nexport const FETCH_USER_PROFILE = 'FETCH_USER_PROFILE';\n\n// friends\nexport const FETCH_FRIENDS_SUCCESS = 'FETCH_FRIENDS_SUCCESS';\nexport const ADD_FRIEND = 'ADD_FRIEND';\nexport const REMOVE_FRIEND = 'REMOVE_FRIEND';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const UPDATE_POST_LIKE = 'UPDATE_POST_LIKE';\n\n// search\nexport const FETCH_SEARCH_RESULTS_SUCCESS = 'FETCH_SEARCH_RESULTS_SUCCESS';\n","// contain all those function that are required in many places\n\nexport function getFormBody(params) {\n  let formBody = [];\n  for (let property in params) {\n    let encodedKey = encodeURIComponent(property); // if property name is user name convert it into 'user%20name' fill space with %20\n    let encodedValue = encodeURIComponent(params[property]); // if username is lanchi agrawal convert it into lanchi%20agrawal\n    formBody.push(encodedKey + '=' + encodedValue); //['username=lanchi','password=1234']\n  }\n  return formBody.join('&'); //'username=lanchi&password=1234'\n}\n\nexport function getAuthTokenFromLocalStorage() {\n  return localStorage.getItem('token');\n}\n","import { APIUrls } from '../helpers/urls';\nimport {\n  ADD_POST,\n  UPDATE_POSTS,\n  ADD_COMMENT,\n  UPDATE_POST_LIKE,\n} from './actionTypes';\nimport { getAuthTokenFromLocalStorage, getFormBody } from '../helpers/utils';\n\nexport function fetchPosts() {\n  return (dispatch) => {\n    const url = APIUrls.fetchPosts(1, 25);\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data);\n        dispatch(updatePosts(data.data.posts));\n      });\n  };\n}\n\nexport function updatePosts(posts) {\n  return {\n    type: UPDATE_POSTS,\n    posts: posts,\n  };\n}\n\nexport function addPost(post) {\n  return {\n    type: ADD_POST,\n    post,\n  };\n}\n\nexport function createPost(content) {\n  return (dispatch) => {\n    const url = APIUrls.createPost();\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n      body: getFormBody({ content }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('dATA', data);\n\n        if (data.success) {\n          dispatch(addPost(data.data.post));\n        }\n      });\n  };\n}\n\nexport function createComment(content, postId) {\n  return (dispatch) => {\n    const url = APIUrls.createComment();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n      body: getFormBody({ content, post_id: postId }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          dispatch(addComment(data.data.comment, postId));\n        }\n      });\n  };\n}\n\nexport function addComment(comment, postId) {\n  return {\n    type: ADD_COMMENT,\n    comment,\n    postId,\n  };\n}\nexport function addLike(id, likeType, userId) {\n  return (dispatch) => {\n    const url = APIUrls.toggleLike(id, likeType);\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('LIKE DATA', data);\n\n        if (data.success) {\n          dispatch(addLikeToStore(id, userId));\n        }\n      });\n  };\n}\n\nexport function addLikeToStore(postId, userId) {\n  return {\n    type: UPDATE_POST_LIKE,\n    postId,\n    userId,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CreatePost, Post } from './';\n\nclass PostsList extends Component {\n  render() {\n    const { posts } = this.props;\n    return (\n      <div className=\"posts-list\">\n        <CreatePost />\n        {posts.map((post) => (\n          <Post post={post} key={post._id} />\n        ))}\n      </div>\n    );\n  }\n}\n\nPostsList.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nexport default PostsList;\n","import { APIUrls } from '../helpers/urls';\nimport { getFormBody } from '../helpers/utils';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport {\n  LOGIN_FAILED,\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILED,\n  SIGNUP_START,\n  AUTHENTICATE_USER,\n  LOG_OUT,\n  CLEAR_AUTH_STATE,\n  EDIT_USER_SUCCESSFUL,\n  EDIT_USER_FAILED,\n} from './actionTypes';\n\nexport function startLogin() {\n  return {\n    type: LOGIN_START,\n  };\n}\n\nexport function loginSuccess(user) {\n  return {\n    type: LOGIN_SUCCESS,\n    user: user,\n  };\n}\nexport function loginFailed(errorMessage) {\n  return {\n    type: LOGIN_FAILED,\n    error: errorMessage,\n  };\n}\nexport function login(email, password) {\n  return (dispatch) => {\n    dispatch(startLogin());\n    const url = APIUrls.login();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: getFormBody({ email, password }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('DATA', data);\n        if (data.success) {\n          //dispatch action to save user\n          localStorage.setItem('token', data.data.token);\n          dispatch(loginSuccess(data.data.user));\n          return;\n        }\n        dispatch(loginFailed(data.message));\n      });\n  };\n}\n\nexport function signup(email, password, confirmPassword, name) {\n  return (dispatch) => {\n    dispatch(startSignup());\n    const url = APIUrls.signup();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: getFormBody({\n        email,\n        password,\n        confirm_password: confirmPassword,\n        name,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        if (data.success) {\n          //do something\n          localStorage.setItem('token', data.data.token);\n          dispatch(signupSuccessful(data.data.user));\n          return;\n        }\n        dispatch(signupFailed(data.message));\n      });\n  };\n}\nexport function startSignup() {\n  return {\n    type: SIGNUP_START,\n  };\n}\n\nexport function signupSuccessful(user) {\n  return {\n    type: SIGNUP_SUCCESS,\n    user: user,\n  };\n}\nexport function signupFailed(errorMessage) {\n  return {\n    type: SIGNUP_FAILED,\n    error: errorMessage,\n  };\n}\n\nexport function authenticateUser(user) {\n  return {\n    type: AUTHENTICATE_USER,\n    user,\n  };\n}\n\nexport function logoutUser() {\n  return {\n    type: LOG_OUT,\n  };\n}\nexport function clearAuthState() {\n  return {\n    type: CLEAR_AUTH_STATE,\n  };\n}\n\nexport function editUserSuccessful(user) {\n  return {\n    type: EDIT_USER_SUCCESSFUL,\n    user,\n  };\n}\n\nexport function editUserFailed(error) {\n  return {\n    type: EDIT_USER_FAILED,\n    error,\n  };\n}\n\nexport function editUser(name, password, confirmPassword, userId) {\n  return (dispatch) => {\n    const url = APIUrls.editProfile();\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n      body: getFormBody({\n        name,\n        password,\n        confirm_password: confirmPassword,\n        id: userId,\n      }),\n    })\n      .then((repsonse) => repsonse.json())\n      .then((data) => {\n        console.log('EDIT PROFIle data', data);\n        if (data.success) {\n          dispatch(editUserSuccessful(data.data.user));\n\n          if (data.data.token) {\n            localStorage.setItem('token', data.data.token);\n          }\n          return;\n        }\n\n        dispatch(editUserFailed(data.message));\n      });\n  };\n}\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from './actionTypes';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport { APIUrls } from '../helpers/urls';\n\nexport function searchUsers(searchText) {\n  return (dispatch) => {\n    const url = APIUrls.userSearch(searchText);\n\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n    })\n      .then((repsonse) => repsonse.json())\n      .then((data) => {\n        console.log('SEARCH data', data);\n        if (data.success) {\n          dispatch(searchResultsSuccess(data.data.users));\n        } else {\n          dispatch(searchResultsSuccess([]));\n        }\n      });\n  };\n}\n\nexport function searchResultsSuccess(users) {\n  return {\n    type: FETCH_SEARCH_RESULTS_SUCCESS,\n    users,\n  };\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/auth';\nimport { searchUsers } from '../actions/search';\n\nclass Navbar extends Component {\n  logout = () => {\n    localStorage.removeItem('token');\n    this.props.dispatch(logoutUser());\n  };\n\n  handleSearch = (e) => {\n    const searchText = e.target.value;\n    this.props.dispatch(searchUsers(searchText));\n  };\n  render() {\n    const { auth, results } = this.props;\n    return (\n      <nav className=\"nav\">\n        <div className=\"left-div\">\n          <Link to=\"/\">\n            <img\n              src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\n              alt=\"logo\"\n            />\n          </Link>\n        </div>\n        <div className=\"search-container\">\n          <img\n            className=\"search-icon\"\n            src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\n            alt=\"search-icon\"\n          />\n          <input placeholder=\"Search\" onChange={this.handleSearch} />\n          {results.length > 0 && (\n            <div className=\"search-results\">\n              <ul>\n                {results.map((user) => (\n                  <li className=\"search-results-row\" key={user._id}>\n                    <Link to={`/user/${user._id}`}>\n                      <img\n                        src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                        alt=\"user-dp\"\n                      />\n                      <span>{user.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n\n        <div className=\"right-nav\">\n          {auth.isLoggedin && (\n            <div className=\"user\">\n              <Link to=\"/settings\">\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                  alt=\"user-dp\"\n                  id=\"user-dp\"\n                />\n              </Link>\n              <span>{auth.user.name}</span>\n            </div>\n          )}\n\n          <div className=\"nav-links\">\n            <ul>\n              {!auth.isLoggedin && (\n                <li>\n                  <Link to=\"/login\">Log in</Link>\n                </li>\n              )}\n              {auth.isLoggedin && <li onClick={this.logout}>Log out</li>}\n              {!auth.isLoggedin && (\n                <li>\n                  <Link to=\"/signup\">Register</Link>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    results: state.search.results,\n  };\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { Component } from 'react';\nimport { io } from 'socket.io-client';\nimport { connect } from 'react-redux';\nimport '../chat.css';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messages: [], // {content: 'some message', self: true}\n      typedMessage: '',\n    };\n    console.log(' I am here');\n    this.socket = io.connect('http://localhost:3000', {\n      transport: ['websocket'],\n    });\n    this.userEmail = props.user.email;\n    console.log(' I am here');\n    if (this.userEmail) {\n      this.setupConnections();\n    }\n  }\n\n  setupConnections = () => {\n    const socketConnection = this.socket;\n    const self = this;\n    console.log(')))))))))))))', this.userEmail);\n    this.socket.on('connect', function () {\n      console.log('CONNECTION ESTABLISHED');\n\n      socketConnection.emit('join_room', {\n        user_email: this.userEmail,\n        chatroom: 'codeial',\n      });\n\n      socketConnection.on('user_joined', function (data) {\n        console.log('NE USER JOINED', data);\n      });\n    });\n\n    this.socket.on('receive_message', function (data) {\n      // add message to state\n      const { messages } = self.state;\n      const messageObject = {};\n      messageObject.content = data.message;\n\n      if (data.user_email === self.userEmail) {\n        messageObject.self = true;\n      }\n\n      self.setState({\n        messages: [...messages, messageObject],\n        typedMessage: '',\n      });\n    });\n  };\n\n  handleSubmit = () => {\n    const { typedMessage } = this.state;\n    console.log('*************************', typedMessage);\n    if (typedMessage && this.userEmail) {\n      this.socket.emit('send_message', {\n        message: typedMessage,\n        user_email: this.userEmail,\n        chatroom: 'codeial',\n      });\n    }\n  };\n\n  render() {\n    const { typedMessage, messages } = this.state;\n\n    return (\n      <div className=\"chat-container\">\n        <div className=\"chat-header\">\n          Chat\n          {/* <img\n            src=\"https://www.iconsdb.com/icons/preview/white/minus-5-xxl.png\"\n            alt=\"\"\n            height={17}\n          /> */}\n        </div>\n        <div className=\"chat-messages\">\n          {messages.map((message) => (\n            <div\n              className={\n                message.self\n                  ? 'chat-bubble self-chat'\n                  : 'chat-bubble other-chat'\n              }\n            >\n              {message.content}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-footer\">\n          <input\n            type=\"text\"\n            value={typedMessage}\n            onChange={(e) => this.setState({ typedMessage: e.target.value })}\n          />\n          <button onClick={this.handleSubmit}>Submit</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return {\n    user: auth.user,\n  };\n}\nexport default connect(mapStateToProps)(Chat);\n","import React from 'react';\nimport { FriendsListItem } from './';\n\nconst FriendsList = (props) => {\n  return (\n    <div className=\"friends-list\">\n      <div className=\"header\">Friends</div>\n\n      {props.friends && props.friends.length === 0 && (\n        <div className=\"no-friends\">No friends found!</div>\n      )}\n\n      {props.friends &&\n        props.friends.map((friend) => (\n          <FriendsListItem friend={friend.to_user} key={friend._id} />\n        ))}\n    </div>\n  );\n};\n\nexport default FriendsList;\n","import React, { Component } from 'react';\nimport { PostsList } from './';\nimport Chat from './Chat';\nimport FriendsList from './FriendsList';\n\nclass Home extends Component {\n  render() {\n    const { posts, friends, isLoggedin } = this.props;\n    console.log('HOME_____________', this.props);\n    return (\n      <div className=\"home\">\n        <PostsList posts={posts} />\n        {isLoggedin && <FriendsList friends={friends} />}\n        {/* {isLoggedin && <Chat />} */}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction Page404(props) {\n  return (\n    <div>\n      <h2>404 Nothing Found Here...</h2>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { clearAuthState, login } from '../actions/auth';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    // handling form data using uncontrolled component\n    // this.emailInputRef = React.createRef();\n    // this.passwordInputRef = React.createRef();\n    //handling form data using controlled component\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n  componentWillUnmount() {\n    this.props.dispatch(clearAuthState());\n  }\n\n  handleEmailChange = (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  handlePasswordChange = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    // console.log('this.emailInputRef', this.emailInputRef);\n    // console.log('this.passwordInputRef', this.passwordInputRef);\n    console.log('THIS_STATE', this.state);\n    const { email, password } = this.state;\n    // if both available then only dispatch an action\n    if (email && password) {\n      this.props.dispatch(login(email, password));\n    }\n  };\n  render() {\n    const { error, inProgress, isLoggedin } = this.props.auth;\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    if (isLoggedin) {\n      return <Redirect to={from} />;\n    }\n    return (\n      <form className=\"login-form\">\n        <span className=\"login-signup-header\">Log In</span>\n        {error && <div className=\"alert-error-dialog\">{error}</div>}\n        <div className=\"field\">\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            value={this.state.email}\n            //handling form data using uncontrolled component\n            // ref={this.emailInputRef}\n            //handling form data using controlled component\n            onChange={this.handleEmailChange}\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={this.state.password}\n            //handling form data using uncontrolled component\n            // ref={this.passwordInputRef}\n            //handling form data using controlled component\n            onChange={this.handlePasswordChange}\n          />\n        </div>\n        <div className=\"field\">\n          {inProgress ? (\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\n              Logging In...\n            </button>\n          ) : (\n            <button onClick={this.handleFormSubmit} disabled={inProgress}>\n              Log In\n            </button>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { clearAuthState, signup } from '../actions/auth';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: '',\n      confirmPassword: '',\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(clearAuthState());\n  }\n\n  handleInputChange = (field, value) => {\n    this.setState({\n      [field]: value,\n    });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const { email, password, confirmPassword, name } = this.state;\n\n    if (email && password && confirmPassword && name) {\n      this.props.dispatch(signup(email, password, confirmPassword, name));\n    }\n  };\n\n  render() {\n    const { inProgress, error, isLoggedin } = this.props.auth;\n    if (isLoggedin) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <form className=\"login-form\">\n        <span className=\"login-signup-header\"> Signup</span>\n        {error && <div className=\"alert error-dailog\">{error}</div>}\n        <div className=\"field\">\n          <input\n            placeholder=\"Name\"\n            type=\"text\"\n            required\n            onChange={(e) => this.handleInputChange('name', e.target.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            required\n            onChange={(e) => this.handleInputChange('email', e.target.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            placeholder=\"Confirm password\"\n            type=\"password\"\n            required\n            onChange={(e) =>\n              this.handleInputChange('confirmPassword', e.target.value)\n            }\n          />\n        </div>\n        <div className=\"field\">\n          <input\n            placeholder=\"Password\"\n            type=\"password\"\n            required\n            onChange={(e) => this.handleInputChange('password', e.target.value)}\n          />\n        </div>\n        <div className=\"field\">\n          <button onClick={this.onFormSubmit} disabled={inProgress}>\n            Signup\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  auth,\n});\n\nexport default connect(mapStateToProps)(Signup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { editUser, clearAuthState } from '../actions/auth';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.auth.user.name,\n      password: '',\n      confirmPassword: '',\n      editMode: false,\n    };\n  }\n\n  handleChange = (fieldName, val) => {\n    this.setState({\n      [fieldName]: val,\n    });\n  };\n\n  handleSave = () => {\n    const { password, confirmPassword, name } = this.state;\n    const { user } = this.props.auth;\n\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\n  };\n\n  componentWillUnmount() {\n    this.props.dispatch(clearAuthState());\n  }\n  render() {\n    const { user, error } = this.props.auth;\n    const { editMode } = this.state;\n    return (\n      <div className=\"settings\">\n        <div className=\"img-container\">\n          <img\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n            alt=\"user-dp\"\n          />\n        </div>\n\n        {error && <div className=\"alert error-dailog\">{error}</div>}\n        {error === false && (\n          <div className=\"alert success-dailog\">\n            Successfully updated profile!\n          </div>\n        )}\n        <div className=\"field\">\n          <div className=\"field-label\">Email</div>\n          <div className=\"field-value\">{user.email}</div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"field-label\">Name</div>\n          {editMode ? (\n            <input\n              type=\"text\"\n              onChange={(e) => this.handleChange('name', e.target.value)}\n              value={this.state.name}\n            />\n          ) : (\n            <div className=\"field-value\">{user.name}</div>\n          )}\n        </div>\n\n        {editMode && (\n          <div className=\"field\">\n            <div className=\"field-label\">New password</div>\n\n            <input\n              type=\"password\"\n              onChange={(e) => this.handleChange('password', e.target.value)}\n              value={this.state.password}\n            />\n          </div>\n        )}\n\n        {editMode && (\n          <div className=\"field\">\n            <div className=\"field-label\">Confirm password</div>\n\n            <input\n              type=\"password\"\n              onChange={(e) =>\n                this.handleChange('confirmPassword', e.target.value)\n              }\n              value={this.state.confirmPassword}\n            />\n          </div>\n        )}\n\n        <div className=\"btn-grp\">\n          {editMode ? (\n            <button className=\"button save-btn\" onClick={this.handleSave}>\n              Save\n            </button>\n          ) : (\n            <button\n              className=\"button edit-btn\"\n              onClick={() => this.handleChange('editMode', true)}\n            >\n              Edit profile\n            </button>\n          )}\n\n          {editMode && (\n            <div\n              className=\"go-back\"\n              onClick={() => this.handleChange('editMode', false)}\n            >\n              Go back\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) {\n  return {\n    auth,\n  };\n}\nexport default connect(mapStateToProps)(Settings);\n","import {\n  FETCH_USER_PROFILE,\n  USER_PROFILE_FAILURE,\n  USER_PROFILE_SUCCESS,\n} from './actionTypes';\n\nimport { APIUrls } from '../helpers/urls';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\n\nexport function startUserProfileFetch() {\n  return {\n    type: FETCH_USER_PROFILE,\n  };\n}\n\nexport function userProfileSuccess(user) {\n  return {\n    type: USER_PROFILE_SUCCESS,\n    user,\n  };\n}\n\nexport function userProfileFailed(error) {\n  return {\n    type: USER_PROFILE_FAILURE,\n    error,\n  };\n}\n\nexport function fetchUserProfile(userId) {\n  return (dispatch) => {\n    dispatch(startUserProfileFetch());\n\n    const url = APIUrls.userProfile(userId);\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          dispatch(userProfileSuccess(data.data.user));\n          return;\n        }\n\n        dispatch(userProfileFailed(data.message));\n      });\n  };\n}\n","import { APIUrls } from '../helpers/urls';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport {\n  FETCH_FRIENDS_SUCCESS,\n  ADD_FRIEND,\n  REMOVE_FRIEND,\n} from './actionTypes';\n\nexport function fetchUserFriends(userId) {\n  return (dispatch) => {\n    const url = APIUrls.userFriends(userId);\n    fetch(url, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('data', data);\n        dispatch(fetchFriendsSucces(data.data.friends));\n      });\n  };\n}\n\nexport function fetchFriendsSucces(friends) {\n  return {\n    type: FETCH_FRIENDS_SUCCESS,\n    friends,\n  };\n}\n\nexport function addFriend(friend) {\n  return {\n    type: ADD_FRIEND,\n    friend,\n  };\n}\n\nexport function removeFriend(userId) {\n  return {\n    type: REMOVE_FRIEND,\n    userId,\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserProfile } from '../actions/profile';\nimport { APIUrls } from '../helpers/urls';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport { addFriend, removeFriend } from '../actions/friends';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: null,\n      error: null,\n      successMessage: null,\n    };\n  }\n  componentDidMount() {\n    const { match } = this.props;\n\n    if (match.params.userId) {\n      // dispatch an action\n      this.props.dispatch(fetchUserProfile(match.params.userId));\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      match: { params: prevParams },\n    } = prevProps;\n\n    const {\n      match: { params: currentParams },\n    } = this.props;\n\n    if (\n      prevParams &&\n      currentParams &&\n      prevParams.userId !== currentParams.userId\n    ) {\n      this.props.dispatch(fetchUserProfile(currentParams.userId));\n    }\n  }\n\n  checkIfUserIsAFriend = () => {\n    console.log('this.props', this.props);\n    const { match, friends } = this.props;\n    const userId = match.params.userId;\n\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\n\n    if (index !== -1) {\n      return true;\n    }\n\n    return false;\n  };\n\n  handleAddFriendClick = async () => {\n    const userId = this.props.match.params.userId;\n    const url = APIUrls.addFriend(userId);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n    };\n\n    const response = await fetch(url, options);\n    const data = await response.json();\n\n    if (data.success) {\n      this.setState({\n        success: true,\n        successMessage: 'Added friend successfully!',\n      });\n\n      this.props.dispatch(addFriend(data.data.friendship));\n    } else {\n      this.setState({\n        success: null,\n        error: data.message,\n      });\n    }\n  };\n\n  handleRemoveFriendClick = async () => {\n    // Mini Assignment\n    const { match } = this.props;\n    const url = APIUrls.removeFriend(match.params.userId);\n\n    const extra = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${getAuthTokenFromLocalStorage()}`,\n      },\n    };\n\n    const response = await fetch(url, extra);\n    const data = await response.json();\n    console.log('await data', data);\n\n    if (data.success) {\n      // show user message\n      this.setState({\n        success: true,\n        successMessage: 'Removed friends successfully!',\n      });\n      this.props.dispatch(removeFriend(match.params.userId));\n    } else {\n      this.setState({\n        success: null,\n        error: data.message,\n      });\n    }\n  };\n\n  render() {\n    const {\n      match: { params },\n      profile,\n    } = this.props;\n    console.log('this.props', params, this.props);\n    const user = profile.user;\n\n    if (profile.inProgress) {\n      return <h1>Loading!</h1>;\n    }\n\n    const isUserAFriend = this.checkIfUserIsAFriend();\n    const { success, error, successMessage } = this.state;\n    return (\n      <div className=\"settings\">\n        <div className=\"img-container\">\n          <img\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n            alt=\"user-dp\"\n          />\n        </div>\n\n        <div className=\"field\">\n          <div className=\"field-label\">Name</div>\n          <div className=\"field-value\">{user.name}</div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"field-label\">Email</div>\n          <div className=\"field-value\">{user.email}</div>\n        </div>\n\n        <div className=\"btn-grp\">\n          {!isUserAFriend ? (\n            <button\n              className=\"button save-btn\"\n              onClick={this.handleAddFriendClick}\n            >\n              Add Friend\n            </button>\n          ) : (\n            <button\n              className=\"button save-btn\"\n              onClick={this.handleRemoveFriendClick}\n            >\n              Remove Friend\n            </button>\n          )}\n\n          {success && (\n            <div className=\"alert success-dailog\">{successMessage}</div>\n          )}\n          {error && <div className=\"alert error-dailog\">{error}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ profile, friends }) {\n  return {\n    profile,\n    friends,\n  };\n}\nexport default connect(mapStateToProps)(UserProfile);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction FriendsListItem(props) {\n  return (\n    <div>\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\n        <div className=\"friends-img\">\n          <img\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n            alt=\"user-pic\"\n          />\n        </div>\n        <div className=\"friends-name\">{props.friend.email}</div>\n      </Link>\n    </div>\n  );\n}\n\nexport default FriendsListItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createPost } from '../actions/posts';\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n    };\n  }\n\n  handleOnClick = () => {\n    // dispatch action\n    this.props.dispatch(createPost(this.state.content));\n    this.setState({\n      content: '',\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n  render() {\n    return (\n      <div className=\"create-post\">\n        <textarea\n          className=\"add-post\"\n          value={this.state.content}\n          onChange={this.handleChange}\n        />\n\n        <div>\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\n            Add Post\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(CreatePost);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Comment } from './';\nimport { createComment, addLike } from '../actions/posts';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      comment: '',\n    };\n  }\n  handleAddComment = (e) => {\n    const { comment } = this.state;\n    const { post } = this.props;\n\n    if (e.key === 'Enter') {\n      this.props.dispatch(createComment(comment, post._id));\n\n      // clear comment\n      this.setState({\n        comment: '',\n      });\n    }\n  };\n\n  handleOnCommentChange = (e) => {\n    this.setState({\n      comment: e.target.value,\n    });\n  };\n\n  handlePostLike = () => {\n    const { post, user } = this.props;\n    this.props.dispatch(addLike(post._id, 'Post', user._id));\n  };\n  render() {\n    const { post, user } = this.props;\n    const { comment } = this.state;\n\n    const isPostLikedByUser = post.likes.includes(user._id);\n\n    return (\n      <div className=\"post-wrapper\" key={post._id}>\n        <div className=\"post-header\">\n          <div className=\"post-avatar\">\n            <Link to={`/user/${post.user._id}`}>\n              <img\n                src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\n                alt=\"user-pic\"\n              />\n            </Link>\n            <div>\n              <span className=\"post-author\">{post.user.name}</span>\n              <span className=\"post-time\">a minute ago</span>\n            </div>\n          </div>\n          <div className=\"post-content\">{post.content}</div>\n\n          <div className=\"post-actions\">\n            <button className=\"post-like no-btn\" onClick={this.handlePostLike}>\n              {isPostLikedByUser ? (\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/1076/1076984.svg\"\n                  alt=\"like post\"\n                />\n              ) : (\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\n                  alt=\"likes-icon\"\n                />\n              )}\n              <span>{post.likes.length}</span>\n            </button>\n\n            <div className=\"post-comments-icon\">\n              <img\n                src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\n                alt=\"comments-icon\"\n              />\n              <span>{post.comments.length}</span>\n            </div>\n          </div>\n          <div className=\"post-comment-box\">\n            <input\n              placeholder=\"Start typing a comment\"\n              onChange={this.handleOnCommentChange}\n              onKeyPress={this.handleAddComment}\n              value={comment}\n            />\n          </div>\n\n          <div className=\"post-comments-list\">\n            {post.comments.map((comment) => (\n              <Comment comment={comment} key={comment._id} postId={post._id} />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nfunction mapStateToProps({ auth }) {\n  return {\n    user: auth.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Post);\n","import React from 'react';\n\nfunction Comment({ comment }) {\n  return (\n    <div className=\"post-comment-item\">\n      <div className=\"post-comment-header\">\n        <span className=\"post-comment-author\">{comment.user.name}</span>\n        <span className=\"post-comment-time\">a minute ago</span>\n        <span className=\"post-comment-likes\">{comment.likes.length} likes</span>\n      </div>\n\n      <div className=\"post-comment-content\">{comment.content}</div>\n    </div>\n  );\n}\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { fetchPosts } from '../actions/posts';\nimport { Home, Navbar, Page404, Login, Signup, Settings, UserProfile } from '.';\nimport { authenticateUser } from '../actions/auth';\nimport { getAuthTokenFromLocalStorage } from '../helpers/utils';\nimport { fetchUserFriends } from '../actions/friends';\n\n// const Settings = () => <div>Setting</div>;\n\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n  console.log(privateRouteProps, Component);\n  console.log({ path });\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nclass App extends React.Component {\n  //call api to fetch posts // dispatch an action to do something\n  componentDidMount() {\n    console.log('***************');\n    this.props.dispatch(fetchPosts());\n\n    let token = getAuthTokenFromLocalStorage();\n\n    if (token) {\n      const user = jwt_decode(token);\n      console.log('user', user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          name: user.name,\n          _id: user._id,\n        })\n      );\n      this.props.dispatch(fetchUserFriends());\n    }\n  }\n\n  render() {\n    console.log('PROPS________', this.props);\n    const { posts, auth, friends } = this.props;\n    console.log(this.props.auth);\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedin={auth.isLoggedin}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <PrivateRoute\n              path=\"/settings\"\n              component={Settings}\n              isLoggedin={auth.isLoggedin}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={UserProfile}\n              isLoggedin={auth.isLoggedin}\n            />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n    friends: state.friends,\n  };\n}\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\n  LOGIN_START,\n  LOGIN_SUCCESS,\n  LOGIN_FAILED,\n  SIGNUP_START,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILED,\n  AUTHENTICATE_USER,\n  LOG_OUT,\n  CLEAR_AUTH_STATE,\n  EDIT_USER_SUCCESSFUL,\n  EDIT_USER_FAILED,\n} from '../actions/actionTypes';\n\nconst initialAuthState = {\n  user: {},\n  error: null,\n  isLoggedin: false,\n  inProgress: false,\n};\n\nexport default function auth(state = initialAuthState, action) {\n  console.log('AUTH_REDUCER');\n  switch (action.type) {\n    case CLEAR_AUTH_STATE:\n      return {\n        ...state,\n        error: null,\n      };\n    case LOGIN_START:\n    case SIGNUP_START:\n      return {\n        ...state,\n        inProgress: true,\n      };\n    case LOGIN_SUCCESS:\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        user: action.user,\n        isLoggedin: true,\n        inProgress: false,\n        error: null,\n      };\n    case LOGIN_FAILED:\n    case SIGNUP_FAILED:\n      return {\n        ...state,\n        inProgress: false,\n        error: action.error,\n      };\n    case AUTHENTICATE_USER:\n      return {\n        ...state,\n        user: action.user,\n        isLoggedin: true,\n      };\n    case LOG_OUT:\n      return {\n        ...state,\n        user: {},\n        isLoggedin: false,\n      };\n    case EDIT_USER_SUCCESSFUL:\n      return {\n        ...state,\n        user: action.user,\n        error: false,\n      };\n    case EDIT_USER_FAILED:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAILURE,\n  FETCH_USER_PROFILE,\n} from '../actions/actionTypes';\n\nconst initalProfileState = {\n  user: {},\n  error: null,\n  success: null,\n  inProgress: false,\n};\nexport default function profile(state = initalProfileState, action) {\n  switch (action.type) {\n    case USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        success: true,\n        user: action.user,\n        inProgress: false,\n      };\n    case USER_PROFILE_FAILURE:\n      return {\n        ...state,\n        error: action.error,\n        inProgress: false,\n      };\n    case FETCH_USER_PROFILE:\n      return {\n        ...state,\n        inProgress: true,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_FRIENDS_SUCCESS,\n  ADD_FRIEND,\n  REMOVE_FRIEND,\n} from '../actions/actionTypes';\n\nconst defaultProfileState = [];\n\n// profile reducer\nexport default function friends(state = defaultProfileState, action) {\n  switch (action.type) {\n    case FETCH_FRIENDS_SUCCESS:\n      return [...action.friends];\n    case ADD_FRIEND:\n      return state.concat(action.friend);\n    case REMOVE_FRIEND:\n      const newArr = state.filter(\n        (friend) => friend.to_user._id !== action.userId\n      );\n      return newArr;\n\n    default:\n      return state;\n  }\n}\n","import { FETCH_SEARCH_RESULTS_SUCCESS } from '../actions/actionTypes';\n\nconst initialSearchState = {\n  results: [],\n};\n\nexport default function search(state = initialSearchState, action) {\n  switch (action.type) {\n    case FETCH_SEARCH_RESULTS_SUCCESS:\n      return {\n        ...state,\n        results: action.users,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport posts from './posts';\nimport auth from './auth';\nimport profile from './profile';\nimport friends from './friends';\nimport search from './search';\n\n//all reducer go into this, as it contain all reducer , because createstore need only one reducer that is rootReducer\nexport default combineReducers({\n  posts,\n  auth,\n  profile,\n  friends,\n  search,\n});\n","import {\n  UPDATE_POSTS,\n  ADD_POST,\n  ADD_COMMENT,\n  UPDATE_POST_LIKE,\n} from '../actions/actionTypes';\n\nexport default function posts(state = [], action) {\n  switch (action.type) {\n    case UPDATE_POSTS:\n      return action.posts;\n    case ADD_POST:\n      return [action.post, ...state];\n    case ADD_COMMENT:\n      const newPosts = state.map((post) => {\n        if (post._id === action.postId) {\n          return {\n            ...post,\n            comments: [action.comment, ...post.comments],\n          };\n        }\n\n        return post;\n      });\n      return newPosts;\n    case UPDATE_POST_LIKE:\n      const updatedPosts = state.map((post) => {\n        if (post._id === action.postId) {\n          return {\n            ...post,\n            likes: [...post.likes, action.userId],\n          };\n        }\n\n        return post;\n      });\n      return updatedPosts;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { configureStore } from './store';\nimport { Provider } from 'react-redux';\n\n//call configureStore to create store\nconst store = configureStore();\nconsole.log('STORE_______', store, store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport reducer from '../reducers/index';\n\nlet store;\n\n//create store takes two argument rootReducer and applyMiddleware takes middleware as an argument , here thunk and logger are middleware\nexport function configureStore() {\n  store = createStore(reducer, applyMiddleware(thunk, logger));\n  return store;\n}\n"],"sourceRoot":""}